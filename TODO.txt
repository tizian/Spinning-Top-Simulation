Todo
====

Functionality
-------------
- Order of events: can't check for collisions after only updating position?!
- st1, 2 disappear if they rotate too fast (they tip over on their own (unknown why)). They tip over with a huge angular velocity and then get kick far off.
- ground friction -> not sure yet.
- Create (global?) list of all rigid bodies for pairwise collision handling, maybe create scene class which stores all data for the scene (spinning tops, ground, calculate collisions bewteen them, etc..)
- arbitrary mesh-mesh collision: pairwise triangle-triangle intersection tests for detection -> pixar pdf for handling the actual collisions (edge, plane vs edge, edge collisions)
- resting contacts (maybe simplified version as ground isn't really a rigid body) -> pixar pdf
- create array / vector of all spinning tops at the beginning. Calculate inertia tensor (this is setMesh() only once) etc. Idealy save these inertia tensors as files and reload them the next time. Calculating a good inertia tensor takes more than 5 seconds.
- Maybe whole interia tensor calculation can happen in a seperate class (pass ptr to a Mesh to the function?) -> too much unused code in Rigid body if matrix is precomputed anyway...
- check if timestep calculation from http://gafferongames.com/game-physics/fix-your-timestep/ gives better results. If yes -> implement
- change mass and see if the spinnning top spins differently (less mass -> better spin) (SpinIt)

Cosmetic
--------
- shadow mapping
- Texturing: wood, steel, real life (st3)
- GUI with labels which buttons can be pressed and their impact
- Sound (collision, fritcion, fade out)
- introduce state objects to allow better timesteps and rewind.
- pause simulation and rewinding
- Visualize the COM with a red dot, which is always viible

Done
----

- decrease CPU and GPU usage. Even with one simple Spinning top and the ground, quite high usage.
- Fix 'L' key
- correct normal of lower ground to make it darker
- change m_orientation of RigidBody to quaternion.
- change repository to GIT
- loading screen (or faster loading ^^) (http://www.glfw.org/documentation.html as reference)
- More spinning top models
- planar shadows
- st1, 2, 3 etc disappear when colliding upsidedown
- slow motion
- fix collision handling with plane -> pixar pdf
- ST1 tips over? (But ST3 doesn't...)
    recreating the mesh fixed the problem, but it is unclear why.
- test big timesteps. Current implementation should be able to handle those (bisection), but probably doesn't :-/
    the bisection only correctly handles collisions, but euler still has problems with big timesteps
- check normals in meshes. Specially sp3 and sp4, where the lowest vertex does have strange normals -> no collision detection
    Normal calculation was incorrect
- change the COM for a spinning top and see if it spins differently (lower COM -> better spin) (SpinIt)
    Yes, it spins differently, but it is unclear if correctly.

Links
=====

More about angular velocity:
http://en.wikipedia.org/wiki/Angular_velocity

More about collisions:
http://en.wikipedia.org/wiki/Collision_response (Includes Impulse-Based Friction Model!)

Realtime Rigid Body Simulation Using Impulses:
http://files.slembcke.net/misc/RigidBodies.pdf

http://gafferongames.com/virtualgo/how-the-go-stone-moves/
http://gafferongames.com/virtualgo/collision-detection-go-stone-vs-go-board/
http://gafferongames.com/virtualgo/rotation-and-inertia-tensors/
http://gafferongames.com/virtualgo/collision-response-and-coulomb-friction/